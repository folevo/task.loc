<div id="grid4"></div>
<script>

    Ext.Loader.setConfig({enabled: true});
    Ext.Loader.setPath('Ext', '/ext-4.2.1.883');
    Ext.require([
        'Ext.grid.*',
        'Ext.data.*',
        'Ext.selection.CheckboxModel'
    ]);


    Ext.onReady(function() {
var city='empty';
var education='empty';
var name='empty';
        Ext.define('myModel', {
            idProperty: 'id',
            extend: 'Ext.data.Model',
            fields: ['name','city','view_education','user_id']

        });
        var fm = Ext.form;
        var itemsPerPage = 1
        var store = Ext.create('Ext.data.JsonStore', {

            model: 'myModel',
            fields: ['city', 'name', 'view_education','user_id'],
            storeId: 'userStore',
            pageSize: itemsPerPage,
            proxy: {
                type: 'ajax',
                url: "<?php echo $this->url('data'); ?>",
                actionMethods: {
                    read: 'POST'
                },
                reader: {
                    type: 'json',
                    root: 'data'

                }



            },

            autoLoad: {start: 0, limit: 5},
            remoteSort: true


        });

            new Ext.form.ComboBox({
                listeners: {
                    select: function(combo, record, index) {

                        city=combo.value;


                if(name=='empty' && education=='empty'){


                        grid.store.load({
                            params:{
                                start:0,
                                limit: 2,
                                city: city
                            }
                        });
                    }else if(name!='empty' && education=='empty'){
                            grid.store.load({
                                params:{
                                    start:0,
                                    limit: 2,
                                    city: city,
                                    view_education:education
                                }
                            });
                        }else if(name=='empty' && education!='empty'){

                    grid.store.load({
                        params:{
                            start:0,
                            limit: 2,
                            city: city,
                            view_education:education

                        }
                    });
                }else{
                            grid.store.load({
                                params:{
                                    start:0,
                                    limit: 2,
                                    city: city,
                                    view_education:education,
                                    name: name
                                }
                                });
                        }

                        grid.getStore().reload({
                            callback: function(){
                                grid.getView().refresh();
                            }
                        });
                    }
                },
                queryMode:'local',

                    renderTo: 'grid4',

            fieldLabel: 'Страна',

            store:  {            // конфигурация хранилища

                fields: [ 'city','id'],

                data: <?php echo $city; ?>

        },

    displayField: 'city', // это текстовое значение <option>…</option>

    valueField: 'city'   // а это значение поля <option value=»…»>



            });
        new Ext.form.ComboBox({
            listeners: {
                select: function(combo, record, index) {

                    education=combo.value;




                    if(city=='empty' && name=='empty'){


                        grid.store.load({
                            params:{
                                start:0,
                                limit: 2,
                                view_education:education
                            }
                        });
                    }else if(name=='empty' && city!='empty'){
                        grid.store.load({
                            params:{
                                start:0,
                                limit: 2,
                                city: city,
                                view_education:education
                            }
                        });
                    }else if(name!='empty' && city=='empty'){
                        grid.store.load({
                            params:{
                                start:0,
                                limit: 2,

                                view_education:education,
                                name: name
                            }
                        });
                    }else{
                        grid.store.load({
                            params:{
                                start:0,
                                limit: 2,
                                city: city,
                                view_education:education,
                                name: name
                            }
                        });
                    }
                    grid.getStore().reload({
                        callback: function(){
                            grid.getView().refresh();
                        }
                    });
                }
            },
            queryMode:'local',

            renderTo: 'grid4',

            fieldLabel: 'Ученная степень',

            store:  {            // конфигурация хранилища

                fields: [ 'view_education'],

                data: <?php echo $view_education; ?>

            },

            displayField: 'view_education', // это текстовое значение <option>…</option>

            valueField: 'view_education'   // а это значение поля <option value=»…»>



        });



    store.load({
    params:{
        start:0,
        limit: itemsPerPage
    }



});


       /* var store = Ext.data.StoreManager.lookup('userStore');
        var userfilter = new Ext.util.Filter({
            tyle:'list',
            property: 'name',
            value: 'dimas',
            anyMatch: true,
            caseSensitive: false,
            data: 'data'
        });*/
       // store.filter(userfilter);
      /****  var filters = {
            ftype: 'filters',
            encode: true,
            local: false
        };*/


    var grid = Ext.create('Ext.grid.Panel', {

            store: store,



            plugins: [
                Ext.create('Ext.grid.plugin.CellEditing', {
                    clicksToEdit : 1
                })
            ],

            columns: [

                {

                    text     : 'Имя',
                    dataIndex: 'name',
                    filter: {
                        type: 'string'
                    }

                },



                {
                    text     : 'Город',
                    dataIndex: 'city',
                    filter: {
                        type: 'string'
                    }
                },
                {

                    text     : 'Ученная степень',

                    dataIndex: 'view_education',
                    editor: new fm.TextField({
                        allowBlank: false,
                        listeners : {
                            change : function(field, e) {

                                Ext.Ajax.request({
                                    url: "<?php echo $this->url('update') ?>", // your backend url
                                    method: 'POST',
                                    params: {
                                        'id': grid.getSelectionModel().getSelection()[0].data.user_id,
                                        'view_education': field.getValue()
                                    }
                                });
                            }
                        }
                    })

                }

            ],
            height: 350,
            width: 800,
            title: 'Простейшая статическая таблица grid',
            renderTo: 'grid4',
          dockedItems: [{
              xtype: 'pagingtoolbar',
              store: store,   // same store GridPanel is using
              dock: 'bottom',
              displayInfo: true
          }]
        });

    });

</script>